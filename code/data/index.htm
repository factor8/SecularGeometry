<!DOCTYPE html>
<html>
<head>
	<title>SG Lantern Control Panel</title>
	<meta charset="utf-8"/>
	<meta content="SG Lantern" name="apple-mobile-web-app-title"/>	
	<meta content="width=device-width,initial-scale=1.0" name="viewport"/>
	<meta content="IE=edge" http-equiv="X-UA-Compatible"/>
	<link href="http://cdn.shopify.com/s/files/1/0901/3118/t/2/assets/favicon.ico?612725279125252275" rel="shortcut icon" type="image/x-icon"/>
	<style type="text/css">
		body {
			background:black;
			color:white;
			width:20em;
		}
		.wrap {
			width:;
		}		
		.button {
			color:black;
			background: white;
			/*height:3em;*/
			width:80%;
			text-align: center;
			margin: 2em;
			padding:2em;
			cursor:pointer;
			border-radius: 4px;
		}
		#connectLight {
			width:1em;
			height:1em;
			display: block;
			border-radius: 50%;	
		}
		.connected {
			background: green;

		}
		.not-connected {
			background:red;
		}
	</style>
	<script>
		var debug,connectionIndicator;
		var connection,waiting;
		var connected = 0;		

		function init() {
		    debug = document.getElementById("debug");
		    connectionIndicator = document.getElementById("connectLight");
		    // var connection = new WebSocket('ws://'+location.hostname+':81/', ['arduino']);
			connect();	

			// Setup our ping.			
			window.setTimeout(function(){window.setInterval(function(){checkConnection();},5000);},6000);
		}
		function writeToScreen(message) {
			var pre = document.createElement("p");
			pre.style.wordWrap = "break-word";
			pre.innerHTML = message;
			debug.appendChild(pre);
		} 

		function connect() {
			
			console.log("Connecting...");
			connection = new WebSocket('ws://sg-lantern.local:81/', ['arduino']);		   
	    	connection.onopen = function () {  connection.send('Connected ' + new Date()); connected=1;checkConnection(); }; 
	    	connection.onclose = function(evt) { console.log('Socket closed'); connected=0; };
			connection.onerror = function (error) { console.log('Socket Error: ', error); connected=0;};
			connection.onmessage = function (e) { 
				console.log('Server: ', e.data);
				if (e.data == 1) {
					waiting=0;
					connected == 1;					
					// showConnection();
				}
			};
		}
		// var connection = new WebSocket('ws://'+location.hostname+':81/', ['arduino']);
		function checkConnection() {
			waiting = 1;
			connection.send(1);			
			window.setTimeout(function(){showConnection()},1000);
		}
		function showConnection() {			
			if (!waiting) {
				connectionIndicator.className = 'connected';
			} else {
				connectionIndicator.className = 'not-connected';
			}
		}
		function flash() {  
			if (!connected)connect();
			connection.send("0");
			console.log('Flashing...'); 
		}
		function setBrightness() {
			if (!connected)connect();
			var b = parseInt(document.getElementById('b').value).toString();  
			connection.send("#"+b);
			console.log('Brightness: ' + b); 
		}
		function setSelector() {
			if (!connected)connect();
			var s = parseInt(document.getElementById('s').value).toString(16);  
			connection.send("!"+s);
			console.log('Selector: ' + s); 
		}
		function nextSelector() {
			if (!connected)connect();			
			connection.send("!>");
			console.log('Next Selector Pressed'); 
		}
		function backSelector() {
			if (!connected)connect();			
			connection.send("!<");
			console.log('Back Selector Pressed'); 
		}
		function getSelector() {
			if (!connected)connect();
			connection.send("G!");
			console.log('Getting Selector...'); 	
			/// needs return return
		}		
	</script>

</head>
<body>
	<div class="wrap">
		<span id="connectLight" class="not-connected"></div>
		<div class="flash button" name="flash" value="flash" onClick="flash();" ><p>Flash</p></div>	
		Brightness: <input id="b" type="range" min="0" max="100" step="1" onchange="setBrightness();" />
		<br /><br />
		<div class="button" onClick="backSelector();">Back Pattern</div><div class="button" onClick="nextSelector();">Next Pattern</div>
		<br /><br />
		Pattern: <input id="s" type="range" min="0" max="9" step="1" onchange="setSelector();" />
		<br /><br />
		<div class="button" onClick="getSelector();">Get Current Pattern</div>
		<br /><br />
	</div> 
	<div id="debug"></div>
	<script type="text/javascript">
		init();
	</script>
</body>
</html>